// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  name String
  role Role @default(USER)
  posts Post[]
  comments Comment[]
  likes Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  attachments Attatchment[]
}

model Post {
  id Int @id @default(autoincrement())
  title String
  content String
  published Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId Int 
  user User @relation(fields: [userId], references: [id])
  comments Comment[]
  likes Like[]
  tags Tag[] @relation("PostTags")
  attachments Attatchment[]
}

model Comment {
  id Int @id @default(autoincrement())
  content String?
  createdAt DateTime @default(now())
  postId Int
  post Post @relation(fields: [postId], references: [id])
  userId Int
  user User @relation(fields: [userId], references: [id])

  // self referencing relation tfor threaded replies
  parentId Int?   //this is a nullable field, if the parentId is null then that means that the comment is a top level comment.
  parent Comment? @relation("CommentToReplies", fields: [parentId], references: [id])   //
  replies Comment[] @relation("CommentToReplies")

  attachments Attatchment[]
}

model Like {
  id Int @id @default(autoincrement())
  postId Int
  post Post @relation(fields: [postId], references: [id])
  userId Int
  user User @relation(fields: [userId], references: [id])
}

model Tag {
  id Int @id @default(autoincrement())
  name String @unique
  posts Post[] @relation("PostTags")
}

// add a new Attatchment schema to share files as comments to post  or as replty to a comment

model Attatchment {
  id Int @id @default(autoincrement())
  directory String
  userId Int
  user User @relation(fields: [userId], references: [id])
  postId Int?
  post Post? @relation(fields: [postId], references: [id])
  commentId Int?
  comment Comment? @relation(fields: [commentId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}